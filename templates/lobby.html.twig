<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Lobby</title>
  <link href="https://fonts.googleapis.com/css2?family=Miltonian+Tattoo&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Russo+One&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/beercss@3.5.8/dist/cdn/beer.min.css" rel="stylesheet">
  <link rel="stylesheet" href="css/lobby_style.css">
  <input type="hidden" id="username" value="{{ username }}">

  <script src="script/pixi.js"></script>
  <script src="script/Bullet.js"></script>
  <script src="script/Experience.js"></script>
  <script src="script/Fireball.js"></script>
  <script src="script/Stalactite.js"></script>
  <script src="script/Hero.js"></script>
  <script src="script/HeroView.js"></script>
  <script src="script/Enemy.js"></script>
  <script src="script/Devil.js"></script>
  <script src="script/Bat.js"></script>
  <script src="script/Poison.js"></script>
  <script src="script/Ground.js"></script>
  <script src="script/WoodenPlank.js"></script>
  <script src="script/Shield.js"></script>
  <script src="script/Health.js"></script>
  <script src="script/Portal.js"></script>
  <script src="script/multiplayerLevel.js"></script>
  <script src="script/Wall.js"></script>

</head>
<body>
<div class="main">
  <div class="players-preview">
    <img class="players-preview__player" id="player" src="images/hero.png">
    <img class="players-preview__opponent" id="opponent"src="images/hero.png">
  </div>
  <button class="ready-button" id="ready-button" disabled>Готов</button>
  <div id="preloader">
    <p class="awaiting-text">Ожидание игрока...</p>
    <div class="loader"></div>
  </div>
</div>


<script src="script/multiplayerIndex.js"></script>
<script>
    const readyButton = document.getElementById('ready-button');
    const opponentPreview = document.getElementById('opponent');
    const preloader = document.getElementById('preloader');
     username = document.getElementById('username').value;
    const ws = new WebSocket('ws://localhost:8080');
    let isConnected = false;
    const messageQueue = [];

    ws.onopen = function() {
        isConnected = true;
        console.log('WebSocket connection established');
        while (messageQueue.length > 0) {
            ws.send(messageQueue.shift());
        }
        ws.send(JSON.stringify({'username': username}))
    };

    ws.onerror = function(error) {
        console.error('WebSocket Error: ' + error);
    };

    ws.onclose = function() {
        isConnected = false;
        console.log('WebSocket connection closed');
        sendMessage('close');
    };

    ws.onmessage = function(event) {
      const data = JSON.parse(event.data);
      if (data === 'kick')
      {
          window.location.href = "/menu";
      }

      if ('state' in data)
      {
          opponentPreview.style.display = 'block';
          preloader.style.display = 'none';
          readyButton.removeAttribute('disabled');
          console.log('connection');
      }

      if ('opponentupdate' in data)
      {
          let playerdata = data['opponentupdate'];
          heroView.updateMove(playerdata['x'], playerdata['y']);
          heroView.updateAnim(playerdata['animatetype']);
          heroView.sprite.scale.x = playerdata['scalex'];
      }
      // console.log(data);
    };

    function sendMessage(msg)
    {
        const message = JSON.stringify({ msg });
        if (isConnected) {
            ws.send(message);
        } else {
            console.log('WebSocket is not connected yet, queueing message');
            messageQueue.push(message);
        }
    }
    //let timerId = setInterval(() => {sendMessage('PING')}, 5000);
    let transferData = setInterval(() =>
    {
      data =
      {
          x: hero.sprite.x,
          y: hero.sprite.y,
          animatetype: hero.animateType,
          scalex: hero.sprite.scale.x,
      }
      ws.send(JSON.stringify({'playerdata': data}))
    }, 10);
</script>
</body>
</html>